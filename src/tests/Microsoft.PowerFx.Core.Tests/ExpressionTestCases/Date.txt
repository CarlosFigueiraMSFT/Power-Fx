>> Date(-1, 2, 3)
#Error(Kind=InvalidArgument)

>> Date(-1,1,1)
#Error(Kind=InvalidArgument)

>> Date(Blank(), 2, 3)
#Error(Kind=InvalidArgument)

>> Date(10000,1,1)
#Error(Kind=InvalidArgument)

>> Date(0,0,0)
#Error(Kind=InvalidArgument)

>> Date(1960,7,31)
Date(1960,7,31)

// Previously: dates before 1900 get converted to post-1900
// New behavior: don't convert. 
>> Date(80, 1, 2)
Date(80,1,2)

>> Date(76,7,4)
Date(76,7,4)

>> Date(100,1,1)
Date(100,1,1)

// months and days overflow (but not for SQL)
>> Date(2000, 25, 69)
Date(2002,3,10)

>> Date(2000, 2, -1)
Date(2000,1,30)

>> Date(2000, -2, 1)
Date(1999,10,1)

>> Date(2000, -2, -1)
Date(1999,9,29)

>> Date(1933,0,25)
Date(1932,12,25)

>> Date(2012,13,14)
Date(2013,1,14)

>> Date(1933,-5,25)
Date(1932,7,25)

>> Date(1933,30,25)
Date(1935,6,25)

>> Date(2118,4,0)
Date(2118,3,31)

>> Date(2012,7,32)
Date(2012,8,1)

>> Date(2012,7,-20)
Date(2012,6,10)

>> Date(2012,7,100)
Date(2012,10,8)

>> Date(1900.67,2.7,12.2)
Date(1900,2,12)

>> Date(1975,Blank(),14)
Date(1974,12,14)

>> Date(1975,10,Blank())
Date(1975,9,30)

>> Date(1/0, 11, 29)
#Error(Kind=Div0)

>> Date(1975,1/0,14)
#Error(Kind=Div0)

>> Date(1975,10,1/0)
#Error(Kind=Div0)

>> Date(-1,1,1/0)
#Error

>> Date("a","b","c")
#Error(Kind=InvalidArgument,InvalidArgument,InvalidArgument)

>> Date("1900","5","14")
Date(1900,5,14)

>> Date("1900",true,true)
Date(1900,1,1)

>> Date("1975",true,false)
Date(1974,12,31)

>> Date("1975",false,false)
Date(1974,11,30)

>> Date(true,true,true)
Date(1,1,1)

>> Date(Year("2022-11-29"),10,18)
Date(2022,10,18)

>> Date(1960, Month("2022-11-29"),17)
Date(1960,11,17)

>> Date(1960,6,Day("2022-11-29"))
Date(1960,6,29)

>> Month(Date(2011,5,12))
5

>> Year(Date(2011,5,12))
2011

>> Day(Date(2011,5,12))
12

// Date comparisons
>> Date(2011,1,15) < Date(2011,1,30)
true

>> Date(2011,1,15) < Date(2011,1,15)
false

>> Date(2011,1,15) <= Date(2011,1,30)
true

>> Date(2011,1,15) <= Date(2011,1,15)
true

>> Date(2011,1,30) < Date(2011,1,15)
false

>> Date(2011,1,30) <= Date(2011,1,15)
false

>> Date(2011,1,15) > Date(2011,1,30)
false

>> Date(2011,1,15) > Date(2011,1,15)
false

>> Date(2011,1,15) >= Date(2011,1,30)
false

>> Date(2011,1,15) >= Date(2011,1,15)
true

>> Date(2011,1,30) > Date(2011,1,15)
true

>> Date(2011,1,30) >= Date(2011,1,15)
true

// Blank Date comparisons
// SQL Null comparisons are always false
>> If(1<0,Date(1,1,1)) < Date(2011,1,30)
true

>> If(1<0,Date(1,1,1)) <= Date(2011,1,30)
true

>> If(1<0,Date(1,1,1)) > Date(2011,1,30)
false

>> If(1<0,Date(1,1,1)) >= Date(2011,1,30)
false

// Error Date comparisons
>> Date(1/0, 2, 3) < Date(2011,1,30)
#Error

>> Date(1/0, 2, 3) <= Date(2011,1,30)
#Error

>> Date(1/0, 2, 3) > Date(2011,1,30)
#Error

>> Date(1/0, 2, 3) >= Date(2011,1,30)
#Error

>> Date(2001,2,14) = Date(2001,2,14)
true

// DateAddDay tests
>> Day(Date(2011,1,15) + 1)
16

>> Day(1 + Date(2011,1,15))
16

>> Day(Date(2011,1,15) - 1)
14

// DateTimeAddDay tests
>> Day((Date(2011,1,15) + 1) + 1)
17

>> Day((1 + Date(2011,1,15)) + 1)
17

>> Day((Date(2011,1,15) - 1) - 1)
13

>> Day(Date(-1, 2, 3))
#Error

>> Day(Blank())
0

>> Month(Date(-1, 2, 3))
#Error

>> Month(Blank())
1

>> Year(Date(-1, 2, 3))
#Error

>> Year(Blank())
1900

// Excel-style date math
>> Date(2001, 2, 14) + 2
Date(2001,2,16)

// Date difference
>> Date(2022, 1, 30) - Date(2022, 1, 15)
15

>> Date(2022, 1, 15) - Date(2022, 1, 30)
-15

>> Date(2022, 1/0, 15) - Date(2022, 1, 30)
#Error(Kind=Div0)
